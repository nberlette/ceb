@startuml eventstorming_AddTodo
!include ./reference.puml
Title("The AddTodo flow", "Eventstorming")
package todo {
  AddTodo()
  TodoRepository()
  TodosUpdated()
}
package app {
  TodosUpdatedListener()
  AppContextFactory()
  AppContextUpdated()
}
component user_interface as "user interface"
AddTodo --> TodoRepository : 1. call
AddTodo --> TodosUpdated : 2. publish
TodosUpdated <.. TodosUpdatedListener : <<listen>>
TodosUpdatedListener --> AppContextFactory : 1. call
TodosUpdatedListener --> AppContextUpdated : 2. publish
AppContextUpdated <.. user_interface : <<listen>>
AddTodo <.. user_interface : <<trigger>>
@enduml

@startuml eventstorming_ChangeFiler
!include ./reference.puml
Title("The ChangeFilter flow", "Eventstorming")
package filter {
  ChangeFilter()
  FilterRepository()
  FilterUpdated()
}
package app {
  FilterUpdatedListener()
  AppContextFactory()
  AppContextUpdated()
}
component user_interface as "user interface"
ChangeFilter --> FilterRepository : 1. call
ChangeFilter --> FilterUpdated : 2. publish
FilterUpdated <.. FilterUpdatedListener : <<listen>>
FilterUpdatedListener --> AppContextFactory : 1. call
FilterUpdatedListener --> AppContextUpdated : 2. publish
AppContextUpdated <.. user_interface : <<listen>>
ChangeFilter <.. user_interface : <<trigger>>
@enduml
